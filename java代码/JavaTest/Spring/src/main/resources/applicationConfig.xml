<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

<!--Set方法注入。需要提供无参构造和对应set方法-->
    <!-- 单独一个bean标签就会创建好一个对象  -->
    <bean id="stu" class="org.example.Student" >
        <!--  简单类型和string用value。引用类型用ref，指向一个bean标签的id  -->
        <property name="name" value="libai"></property>
        <property name="age" value="21"></property>
        <property name="school" ref="sch"></property>
    </bean>
    <!--  bean标签没有先后顺序，前面的可以引用后面的  -->
    <bean id="sch" class="org.example.School">
        <property name="name" value="Kassel"></property>
        <property name="address" value="New York"></property>
    </bean>

<!--  参数名注入 public School(String name, String address)   -->
    <bean id="sch1" class="org.example.School">
        <constructor-arg name="name" value="逐鹿"></constructor-arg>
        <constructor-arg name="address" value="月亮之上"></constructor-arg>
    </bean>

<!-- 混合注入  -->
    <bean id="sch2" class="org.example.School">
        <constructor-arg index="1" value="上界三千州"></constructor-arg>
        <constructor-arg name="name" value="天仙" ></constructor-arg>
    </bean>

    <!--  下标对应着参数，所以顺序可交换  -->
    <bean id="sch3" class="org.example.School">
        <constructor-arg index="1" value="上界三千州"></constructor-arg>
        <constructor-arg index="0" value="天仙" ></constructor-arg>
    </bean>

<!-- 默认顺序注入   -->
    <bean id="sch4" class="org.example.School">
        <constructor-arg value="天神"></constructor-arg>
        <constructor-arg value="上界"></constructor-arg>
    </bean>
</beans>